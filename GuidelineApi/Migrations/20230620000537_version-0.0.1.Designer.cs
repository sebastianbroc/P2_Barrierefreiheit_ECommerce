// <auto-generated />
using System;
using System.Collections.Generic;
using GuidelineAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GuidelineAPI.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20230620000537_version-0.0.1")]
    partial class version001
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GuidelineAPI.Comment", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("DownVotes")
                        .HasColumnType("integer");

                    b.Property<Guid?>("Guidelineid")
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UpVotes")
                        .HasColumnType("integer");

                    b.Property<Guid>("WrittenByid")
                        .HasColumnType("uuid");

                    b.HasKey("id");

                    b.HasIndex("Guidelineid");

                    b.HasIndex("WrittenByid");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("GuidelineAPI.Guideline", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<List<Guid>>("ApprovedBy")
                        .IsRequired()
                        .HasColumnType("uuid[]");

                    b.Property<Guid>("Authorid")
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("Authorid");

                    b.ToTable("Guidelines");
                });

            modelBuilder.Entity("GuidelineAPI.User", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsExpert")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProfilePicture")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Qualification")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GuidelineAPI.Comment", b =>
                {
                    b.HasOne("GuidelineAPI.Guideline", null)
                        .WithMany("Comments")
                        .HasForeignKey("Guidelineid");

                    b.HasOne("GuidelineAPI.User", "WrittenBy")
                        .WithMany()
                        .HasForeignKey("WrittenByid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WrittenBy");
                });

            modelBuilder.Entity("GuidelineAPI.Guideline", b =>
                {
                    b.HasOne("GuidelineAPI.User", "Author")
                        .WithMany("Guidelines")
                        .HasForeignKey("Authorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("GuidelineAPI.Guideline", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("GuidelineAPI.User", b =>
                {
                    b.Navigation("Guidelines");
                });
#pragma warning restore 612, 618
        }
    }
}
